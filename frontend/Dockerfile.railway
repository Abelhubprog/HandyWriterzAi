# Alternative Railway-optimized Dockerfile
FROM node:20-alpine

# Set working directory  
WORKDIR /app

# Install system dependencies
RUN apk add --no-cache libc6-compat curl

# Enable pnpm with specific version
RUN corepack enable && corepack prepare pnpm@9 --activate

# Copy workspace files from parent context
COPY pnpm-workspace.yaml pnpm-lock.yaml ./
COPY frontend/package.json ./frontend/

# Install dependencies  
RUN pnpm install --frozen-lockfile

# Copy source code
COPY frontend ./frontend

# Set build environment
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1

# Build application
WORKDIR /app/frontend
RUN pnpm build

# Create non-root user
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# Set permissions
RUN chown -R nextjs:nodejs /app

# Switch to non-root user
USER nextjs

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:3000/api/health || exit 1

# Start application
CMD ["pnpm", "start"]